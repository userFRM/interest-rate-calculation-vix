name: Python CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-asyncio pylint mypy

    - name: Lint with pylint
      run: |
        pylint src/ --exit-zero || true

    - name: Type check with mypy
      run: |
        mypy src/ --ignore-missing-imports || true

    - name: Test with pytest
      run: |
        pytest tests/ -v --cov=src --cov-report=xml || true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  integration-test:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Run integration test
      run: |
        python src/treasury_rates.py --json-only

    - name: Verify output
      run: |
        python src/treasury_rates.py --near 23 --next 30 --year 2024 || true

  docker:
    runs-on: ubuntu-latest
    needs: test
    # Only run docker build/push on main branch and if secrets are available
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Check Docker Hub credentials
      id: check-docker-creds
      run: |
        if [ -n "${{ secrets.DOCKER_USERNAME }}" ] && [ -n "${{ secrets.DOCKER_PASSWORD }}" ]; then
          echo "docker-creds-available=true" >> $GITHUB_OUTPUT
        else
          echo "docker-creds-available=false" >> $GITHUB_OUTPUT
          echo "::warning::Docker Hub credentials not configured. Skipping push."
        fi

    - name: Log in to Docker Hub
      if: steps.check-docker-creds.outputs.docker-creds-available == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image (without push)
      if: steps.check-docker-creds.outputs.docker-creds-available == 'false'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: treasury-rates:latest

    - name: Build and push Docker image
      if: steps.check-docker-creds.outputs.docker-creds-available == 'true'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/treasury-rates:latest
          ${{ secrets.DOCKER_USERNAME }}/treasury-rates:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'

    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'trivy'
      continue-on-error: true
